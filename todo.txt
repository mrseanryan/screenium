screenium TODO
==============

console app:
screenium <testDetails.csv> <testName>|ALL <reportOutput.html> [-o = leave browser Open] [-s = Save new snapshot images] [-t = self Test]

testDetails.csv:
================
testName, testDescription, divSelector, URL

LATER:
testName, testDescription, divSelector, urlPrefix, urlQuery1, urlQuery2, urlQuery3

OK - fire up chrome
OK - look at args parsing code in SplashScreen app
OK - make console, return code
OK - add args
OK - add test BAT files
OK - make test sites
OK - read from CSV file
OK - fire up test sites
  design pattern: Page Object and Page Factory
  https://code.google.com/p/selenium/wiki/PageFactory

xx - add Query1, Query2, Query3
xx - add delay arg: TimeoutTimeSpan
OK - save screenshot to temp location
		get screenshot of a particular element, via cropping:
		http://stackoverflow.com/questions/13832322/how-to-capture-the-screenshot-of-only-a-specific-element-using-selenium-webdrive

OK - saving screenshots (-s) (with prompt for Y)
OK - comparing against saved screenshots
OK - output report page that lists diff images (with faded actual!) side-by-side
OK - combine images via XOR, with highlighted diff in yellow

OK - add prompt Y for saving screenshots
OK - combine multiple tests into 1 report  (Report -> TestReport, new class TestReportSet)
OK - try with WV LP

OK - add bad row test. output Column as well as Row.
OK - add per-test SleepTimespan (usually 0) after page text seen, and before taking screenshot

OK - fix bug: if test name not recognised from CSV, then throw

n/a - try add option KeepOpen, but for 1 test only (throw on All) (not sure if it is possible)

OK - Report: add CSV filename to the header
OK - Report: add Created DateTime, Execution Duration, x/y Tests Passed to Report class, and to Console at end, and to the HTML in header
OK - Report: add link to the test URL (on the test name)
xx - report: add date to filename?  but this is in the BAT ...  => make a dated archive copy of the report! (with images)

==> HERE <==

OK - report SxS into new tab. make all new tabs use index, so not re-using same tab.
OK - make report be self contained - local images, template files

xx - only show ex details if Verbose option. else show Error: (msg)

xx - add menu to select which test, or ALL.  so cmd line arg is "all" or else "menu" or else "test name"

xx - add AcceptChanges option, with Y prompt -> moves actual to expected

xx - have 4 adjustments: CropAdjustWidth, CropAdjustHeight -> CropAdjustTop, CropAdjustRight, CropAdjustBottom, CropAdjustLeft

xx - add parallel execution (N=2 x WebDrivers ?)

xx - Report: improve styling
   - new cmd line arg TemplateFilePath
   - bootstrap accordion from templates/template1.html

xx - Report: improved side-x-side via kendo popup window

xx - ScriptCount and js file with same name and N tests. screenshot after each js script run.

xx - refactor to have screeniumLib project, for possible later UI

report:
=====
xx - overall result as red/green bar
OK - list of failed/passing tests with red/green
n/a - links to detail section: expected, actual images side-by-side
OK - combine images via XOR, with highlighted diff in yellow
n/a - report from x.partial.template.html templates -> html

example URLs
============
Example URL queries that browser will process:
[see CSV files]
